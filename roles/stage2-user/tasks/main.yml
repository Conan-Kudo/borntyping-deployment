#
# Install user-specific configuration to $HOME
#
# This assumes that the remote ansible user is the user configuration should
# be deployed to.
#

- include: "lang-python.yml tags=python,pipsi"
- include: "lang-ruby.yml tags=ruby"
- include: "lang-zsh.yml tags=zsh,shell"
- include: "tool-peru.yml tags=peru"

- name: generate ssh key
  user: 'name={{ ansible_ssh_user }} generate_ssh_key=true'
  sudo: yes

- name: install utility packages
  apt: 'pkg={{ item }} state=latest'
  sudo: yes
  with_items:
    - htop
    - nano
    - tmux
    - tree
    - aptitude
    - realpath

- name: configure dotfiles
  template: >
    src={{ item }}
    dest={{ ansible_env.HOME }}/.{{ item }}
  with_items:
    - gitconfig
    - gitignore
    - htoprc
    - nanorc
    - tmux.conf
  tags: dotfiles

#
# Installs scripts to ~/.local/bin
#

- name: create bin directory
  file: >
    name={{ ansible_env.HOME }}/.local/bin
    state=directory

- name: install scripts
  copy: >
    src=local/bin/{{ item }}
    dest={{ ansible_env.HOME }}/.local/bin/{{ item }}
    mode=0755
  sudo: yes
  with_items:
    - ansible-run
    - caddy
    - docker-gc
    - git-cleanup
    - git-hub
    - git-overwritten
    - git-sync
    - git-tag-version
    - gws
    - hub
    - tmux-attach
  tags:
    - bin
    - dotfiles
